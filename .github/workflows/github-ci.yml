name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        working-directory: Devops/ECS
        run: docker build -f Dockerfile.ecs -t ecs_image .

      - name: Build project inside Docker
        working-directory: Devops/ECS
        run: |
          docker run ecs_image cmake .
          docker run ecs_image make

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Configure Git Identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Prepare Git Remote
        run: |
          git remote remove epitech || true
          git remote add epitech git@github.com:EpitechPromo2027/B-CPP-500-NCE-5-2-rtype-leonard.oursel.git

      - name: Pull changes and resolve conflicts
        run: |
          git pull epitech main --rebase || true
          git checkout --ours . || true
          git add . || true
          git rebase --continue || true

      - name: Push to Epitech Repo
        run: |
          git push --force epitech main || true

  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          STATUS="success"
          if [ "$GITHUB_JOB" == "deploy" ]; then
            if [ "${{ needs.deploy.result }}" == "failure" ]; then
              STATUS="failure"
            fi
          fi

          if [ "$STATUS" == "success" ]; then
            curl -H "Content-Type: application/json" -X POST -d '{
              "embeds": [{
                "title": "CI/CD Pipeline Passed",
                "description": "The CI/CD pipeline for **R-Type** has successfully passed, and the project has been deployed to the Epitech repo.",
                "color": 3066993,
                "footer": {"text": "CI/CD Notifications"},
                "timestamp": "'$(date --utc +%Y-%m-%dT%H:%M:%SZ)'"
              }]
            }' $DISCORD_WEBHOOK_URL
          else
            curl -H "Content-Type: application/json" -X POST -d '{
              "embeds": [{
                "title": "CI/CD Pipeline Failed",
                "description": "The CI/CD pipeline for **R-Type** has failed. Check the logs for more details.",
                "color": 15158332,
                "footer": {"text": "CI/CD Notifications"},
                "timestamp": "'$(date --utc +%Y-%m-%dT%H:%M:%SZ)'"
              }]
            }' $DISCORD_WEBHOOK_URL
          fi
