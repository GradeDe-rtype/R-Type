FROM mcr.microsoft.com/windows/servercore:ltsc2022

SHELL ["powershell", "-Command"]

RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    Invoke-WebRequest -Uri https://chocolatey.org/install.ps1 -UseBasicParsing | Invoke-Expression; \
    choco install -y python3 cmake.install git curl

RUN Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vs_buildtools.exe -OutFile vs_buildtools.exe; \
    Start-Process -FilePath .\vs_buildtools.exe -ArgumentList '--quiet', '--wait', '--norestart', '--nocache', \
    '--installPath', 'C:\BuildTools', \
    '--add', 'Microsoft.VisualStudio.Workload.VCTools', \
    '--add', 'Microsoft.VisualStudio.Workload.MSBuildTools', \
    '--add', 'Microsoft.VisualStudio.Component.VC.Tools.x86.x64' -Wait; \
    Remove-Item -Force vs_buildtools.exe

RUN python -m pip install --upgrade pip; \
    python -m pip install conan

RUN conan profile detect --force

WORKDIR C:/tmp

COPY conanfile.windows.txt C:/tmp/conanfile.txt

RUN conan install . --output-folder=C:/tmp/build/conan --build=missing -c tools.system.package_manager:mode=install

WORKDIR C:/ECS

COPY . C:/ECS

WORKDIR C:/ECS/build

RUN "C:\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat" ; \
    cl /EHsc /std:c++20 /I C:/tmp/build/conan/include ../test_main.cpp /link /LIBPATH:C:/tmp/build/conan/lib /out:test_main.exe; test_main.exe

CMD ["cmd", "/C", "echo All tests completed!"]
