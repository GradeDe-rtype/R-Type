FROM mcr.microsoft.com/windows/servercore:ltsc2022

SHELL ["powershell", "-Command"]

RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    Invoke-WebRequest -Uri https://chocolatey.org/install.ps1 -UseBasicParsing | Invoke-Expression

RUN choco source add -n community -s https://community.chocolatey.org/api/v2/; \
    choco install -y python3 cmake.install git curl

RUN Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vs_buildtools.exe -OutFile vs_buildtools.exe; \
    Start-Process -FilePath .\vs_buildtools.exe -ArgumentList '--quiet', '--wait', '--norestart', '--nocache', '--installPath', 'C:\BuildTools', '--add', 'Microsoft.VisualStudio.Workload.VCTools', '--add', 'Microsoft.VisualStudio.Workload.MSBuildTools', '--add', 'Microsoft.VisualStudio.Component.VC.Tools.x86.x64' -Wait; \
    Remove-Item -Force vs_buildtools.exe

RUN python -m pip install --upgrade pip; \
    python -m pip install conan

RUN conan profile detect --force && \
    conan profile update settings.compiler.version=17 default && \
    conan profile update settings.compiler.runtime=dynamic default

WORKDIR C:/ECS

COPY . C:/ECS
COPY conanfile.windows.txt C:/ECS/conanfile.txt

RUN conan install . --build=missing --output-folder=build/conan -c tools.system.package_manager:mode=install && \
    mkdir build && \
    cd build && \
    cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON && \
    cmake --build .

CMD ["cmd", "/C", "C:/ECS/build/R-Type.exe"]
